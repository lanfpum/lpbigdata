@startuml
title 屏广总流程
文件 -> 帧:截屏一帧
帧 -> 帧单元:解档
帧单元 --> 帧:归档
帧 --> 文件:组合拼接
@enduml

@startuml
title 发送端流程
(*) -> "开始main"
note right: 发送端主函数运行，无限循环发送一个屏幕截图
--> "截图"
note right: 机器人类截取整个屏幕，写入内存输出流
--> "切图"
note right: 将截取到的截图按照设计报文切割成帧单元集合
if "整除" then
 ->[能整除] "循环的次数为整除值"
 -->[循环组装]"帧单元"
else
 -->[不整除] "循环的次数为整除值+1"
 ->[循环组装]"帧单元"
endif

if "最后一个" then
 ->[最后一个并且不整除] "设值"
 note right: 最后一个帧单元数据长度为余值，数据为剩余数据
 --> "将帧单元添加到集合中"
else
 -->[false] "设固定长度值"
 note left: 最大不超过60k的数据
 ->"将帧单元添加到集合中"
endif
--> "发送帧单元集合"
note right: 创建数组，每个帧单元组装成字节数组，发送
-->[发送完成] (*)
@enduml

@startuml
title 接收端流程
(*) --> "接收"
note right: 将接收到的数据转换成帧单元对象
--> "切图"
note right: 将截取到的截图按照设计报文切割成帧单元集合
if "整除" then
 ->[能整除] "循环的次数为整除值"
 -->[循环组装]"帧单元"
else
 -->[不整除] "循环的次数为整除值+1"
 ->[循环组装]"帧单元"
endif

if "最后一个" then
 ->[最后一个并且不整除] "设值"
 note right: 最后一个帧单元数据长度为余值，数据为剩余数据
 --> "将帧单元添加到集合中"
else
 -->[false] "设固定长度值"
 note left: 最大不超过60k的数据
 ->"将帧单元添加到集合中"
endif
--> "发送帧单元集合"
note right: 创建数组，每个帧单元组装成字节数组，发送
-->[发送完成] (*)
@enduml